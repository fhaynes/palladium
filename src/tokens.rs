#[derive(Debug, PartialEq, Clone)]
pub enum Token {
    AdditionOperator,
    SubtractionOperator,
    MultiplicationOperator,
    DivisionOperator,
    GreaterThan,
    LessThan,
    Integer{ value: i64 },
    Float{ value: f64},
    Identifier{ value: String },
    Factor{ value: Box<Token> },
    Term{ left: Box<Token>, right: Vec<(Token, Token)> },
    FunctionName{ name: String },
    FunctionArgs{ args: Vec<String> },
    FunctionBody{ expressions: Vec<Token> },
    Function{ name: Box<Token>, args: Box<Token>, body: Box<Token> },
    WhileLoop{ start: Box<Token>, body: Box<Token> },
    WhileLoopStart{ expression: Box<Token> },
    WhileLoopBody{ expressions: Vec<Token> },
    ForLoop{ start: Box<Token>, body: Box<Token> },
    ForLoopStart{ variable_name: String, collection_name: String},
    ForLoopBody{ expressions: Vec<Token> },
    Expression{ left: Box<Token>, right: Vec<(Token, Token)> },
    Program{ expressions: Vec<Token> },
}
